{"version":3,"file":"spinner.service.js","sourceRoot":"","sources":["../../src/spinner.service.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;;;4BAMlB,IAAI,GAAG,EAAoB;;IAElD,kCAAS,GAAT,UAAU,OAAyB;QACjC,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;KAChC;IAED,oCAAW,GAAX,UAAY,eAAiC;QAA7C,iBAMC;QALC,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,UAAA,OAAO;YAC/B,EAAE,CAAC,CAAC,OAAO,KAAK,eAAe,CAAC,CAAC,CAAC;gBAChC,KAAI,CAAC,YAAY,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;aACnC;SACF,CAAC,CAAC;KACJ;IAED,yCAAgB,GAAhB,UAAiB,YAAoB;QAArC,iBAMC;QALC,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,UAAA,OAAO;YAC/B,EAAE,CAAC,CAAC,OAAO,CAAC,KAAK,KAAK,YAAY,CAAC,CAAC,CAAC;gBACnC,KAAI,CAAC,YAAY,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;aACnC;SACF,CAAC,CAAC;KACJ;IAED,uCAAc,GAAd;QACE,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC;KAC3B;IAED,6BAAI,GAAJ,UAAK,WAAmB;QACtB,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,UAAA,OAAO;YAC/B,EAAE,CAAC,CAAC,OAAO,CAAC,IAAI,KAAK,WAAW,CAAC,CAAC,CAAC;gBACjC,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC;aACrB;SACF,CAAC,CAAC;KACJ;IAED,6BAAI,GAAJ,UAAK,WAAmB;QACtB,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,UAAA,OAAO;YAC/B,EAAE,CAAC,CAAC,OAAO,CAAC,IAAI,KAAK,WAAW,CAAC,CAAC,CAAC;gBACjC,OAAO,CAAC,IAAI,GAAG,KAAK,CAAC;aACtB;SACF,CAAC,CAAC;KACJ;IAED,kCAAS,GAAT,UAAU,YAAoB;QAC5B,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,UAAA,OAAO;YAC/B,EAAE,CAAC,CAAC,OAAO,CAAC,KAAK,KAAK,YAAY,CAAC,CAAC,CAAC;gBACnC,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC;aACrB;SACF,CAAC,CAAC;KACJ;IAED,kCAAS,GAAT,UAAU,YAAoB;QAC5B,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,UAAA,OAAO;YAC/B,EAAE,CAAC,CAAC,OAAO,CAAC,KAAK,KAAK,YAAY,CAAC,CAAC,CAAC;gBACnC,OAAO,CAAC,IAAI,GAAG,KAAK,CAAC;aACtB;SACF,CAAC,CAAC;KACJ;IAED,gCAAO,GAAP;QACE,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,UAAA,OAAO,IAAI,OAAA,OAAO,CAAC,IAAI,GAAG,IAAI,EAAnB,CAAmB,CAAC,CAAC;KAC3D;IAED,gCAAO,GAAP;QACE,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,UAAA,OAAO,IAAI,OAAA,OAAO,CAAC,IAAI,GAAG,KAAK,EAApB,CAAoB,CAAC,CAAC;KAC5D;IAED,kCAAS,GAAT,UAAU,WAAmB;QAC3B,IAAI,OAAO,GAAG,SAAS,CAAC;QACxB,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,UAAA,OAAO;YAC/B,EAAE,CAAC,CAAC,OAAO,CAAC,IAAI,KAAK,WAAW,CAAC,CAAC,CAAC;gBACjC,OAAO,GAAG,OAAO,CAAC,IAAI,CAAC;aACxB;SACF,CAAC,CAAC;QACH,MAAM,CAAC,OAAO,CAAC;KAChB;;gBA5EF,UAAU;;;;yBAJX;;SAKa,cAAc","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { SpinnerComponent } from './spinner.component';\r\n\r\n\r\n@Injectable()\r\nexport class SpinnerService {\r\n  private spinnerCache = new Set<SpinnerComponent>();\r\n\r\n  _register(spinner: SpinnerComponent): void {\r\n    this.spinnerCache.add(spinner);\r\n  }\r\n\r\n  _unregister(spinnerToRemove: SpinnerComponent): void {\r\n    this.spinnerCache.forEach(spinner => {\r\n      if (spinner === spinnerToRemove) {\r\n        this.spinnerCache.delete(spinner);\r\n      }\r\n    });\r\n  }\r\n\r\n  _unregisterGroup(spinnerGroup: string): void {\r\n    this.spinnerCache.forEach(spinner => {\r\n      if (spinner.group === spinnerGroup) {\r\n        this.spinnerCache.delete(spinner);\r\n      }\r\n    });\r\n  }\r\n\r\n  _unregisterAll(): void {\r\n    this.spinnerCache.clear();\r\n  }\r\n\r\n  show(spinnerName: string): void {\r\n    this.spinnerCache.forEach(spinner => {\r\n      if (spinner.name === spinnerName) {\r\n        spinner.show = true;\r\n      }\r\n    });\r\n  }\r\n\r\n  hide(spinnerName: string): void {\r\n    this.spinnerCache.forEach(spinner => {\r\n      if (spinner.name === spinnerName) {\r\n        spinner.show = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  showGroup(spinnerGroup: string): void {\r\n    this.spinnerCache.forEach(spinner => {\r\n      if (spinner.group === spinnerGroup) {\r\n        spinner.show = true;\r\n      }\r\n    });\r\n  }\r\n\r\n  hideGroup(spinnerGroup: string): void {\r\n    this.spinnerCache.forEach(spinner => {\r\n      if (spinner.group === spinnerGroup) {\r\n        spinner.show = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  showAll(): void {\r\n    this.spinnerCache.forEach(spinner => spinner.show = true);\r\n  }\r\n\r\n  hideAll(): void {\r\n    this.spinnerCache.forEach(spinner => spinner.show = false);\r\n  }\r\n\r\n  isShowing(spinnerName: string): boolean | undefined {\r\n    let showing = undefined;\r\n    this.spinnerCache.forEach(spinner => {\r\n      if (spinner.name === spinnerName) {\r\n        showing = spinner.show;\r\n      }\r\n    });\r\n    return showing;\r\n  }\r\n}"]}