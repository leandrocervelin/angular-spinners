{"version":3,"file":"spinner.component.js","sourceRoot":"","sources":["../../src/spinner.component.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,KAAK,EAAE,MAAM,EAAqB,YAAY,EAAE,MAAM,eAAe,CAAC;AAC1F,OAAO,EAAE,cAAc,EAAE,MAAM,mBAAmB,CAAC;;IAajD,0BAAoB,cAA8B;QAA9B,mBAAc,GAAd,cAAc,CAAgB;yBAM9B,KAAK;0BAOF,IAAI,YAAY,EAAE;KAba;0BASlD,kCAAI;;YACN,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC;;aAKxB,UAAS,GAAY;YACnB,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC;YACrB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;SACtC;;;;IAED,mCAAQ,GAAR;QACE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC;YAAC,MAAM,IAAI,KAAK,CAAC,uCAAuC,CAAC,CAAC;QAEzE,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;KACrC;IAED,sCAAW,GAAX;QACE,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;KACvC;;gBAvCF,SAAS,SAAC;oBACT,QAAQ,EAAE,SAAS;oBACnB,QAAQ,EAAE,0IAKT;oBACD,SAAS,EAAE,CAAC,cAAc,CAAC;iBAC5B;;;;gBAXQ,cAAc;;;yBAepB,KAAK;0BACL,KAAK;iCACL,KAAK;yBAIL,KAAK;+BAKL,MAAM;;2BA3BT;;SAaa,gBAAgB","sourcesContent":["import { Component, Input, Output, OnInit, OnDestroy, EventEmitter } from '@angular/core';\r\nimport { SpinnerService } from './spinner.service';\r\n\r\n@Component({\r\n  selector: 'spinner',\r\n  template: `\r\n    <div *ngIf=\"show\">\r\n      <img *ngIf=\"loadingImage\" [src]=\"loadingImage\" />\r\n      <ng-content></ng-content>\r\n    </div>\r\n  `,\r\n  providers: [SpinnerService]\r\n})\r\nexport class SpinnerComponent implements OnInit, OnDestroy {\r\n  constructor(private spinnerService: SpinnerService) {}\r\n\r\n  @Input() name: string;\r\n  @Input() group: string;\r\n  @Input() loadingImage: string;\r\n\r\n  private isShowing = false;\r\n\r\n  @Input()\r\n  get show(): boolean {\r\n    return this.isShowing;\r\n  }\r\n\r\n  @Output() showChange = new EventEmitter();\r\n\r\n  set show(val: boolean) {\r\n    this.isShowing = val;\r\n    this.showChange.emit(this.isShowing);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (!this.name) throw new Error(\"Spinner must have a 'name' attribute.\");\r\n\r\n    this.spinnerService._register(this);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.spinnerService._unregister(this);\r\n  }\r\n}\r\n"]}