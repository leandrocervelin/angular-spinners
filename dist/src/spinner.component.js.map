{"version":3,"sources":["../../src/spinner.component.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAA,EAAW,KAAA,EAAO,MAAA,EAA2B,YAAA,EAAa,MAAO,eAAA,CAAgB;AAC1F,OAAO,EAAE,cAAA,EAAe,MAAO,mBAAA,CAAoB;AAGnD;IACE,0BAAoB,cAA8B;QAA9B,mBAAc,GAAd,cAAc,CAAgB;QAM1C,cAAS,GAAG,KAAK,CAAC;QAOzB,eAAU,GAAG,IAAI,YAAY,EAAE,CAAC;IAboB,CAAC;IAStD,sBAAI,kCAAI;aAAR;YACE,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC;QACxB,CAAC;aAID,UAAS,GAAY;YACnB,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC;YACrB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACvC,CAAC;;;OAPA;IASD,mCAAQ,GAAR;QACE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC;YAAC,MAAM,IAAI,KAAK,CAAC,uCAAuC,CAAC,CAAC;QAEzE,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;IACtC,CAAC;IAED,sCAAW,GAAX;QACE,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;IACxC,CAAC;IAuBH,uBAAC;AAAD,CApDA,AAoDC;;AAtBM,2BAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;gBACxB,QAAQ,EAAE,SAAS;gBACnB,QAAQ,EAAE,0IAKT;aACF,EAAG,EAAE;CACL,CAAC;AACF,kBAAkB;AACX,+BAAc,GAAmE,cAAM,OAAA;IAC9F,EAAC,IAAI,EAAE,cAAc,GAAG;CACvB,EAF6F,CAE7F,CAAC;AACK,+BAAc,GAA2C;IAChE,MAAM,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IAC1B,OAAO,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IAC3B,cAAc,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IAClC,MAAM,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IAC1B,YAAY,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,EAAE;CAChC,CAAC","file":"spinner.component.js","sourceRoot":"","sourcesContent":["import { Component, Input, Output, OnInit, OnDestroy, EventEmitter } from '@angular/core';\r\nimport { SpinnerService } from './spinner.service';\r\n\r\n\r\nexport class SpinnerComponent implements OnInit, OnDestroy {\r\n  constructor(private spinnerService: SpinnerService) {}\r\n\r\n   name: string;\r\n   group: string;\r\n   loadingImage: string;\r\n\r\n  private isShowing = false;\r\n\r\n  \r\n  get show(): boolean {\r\n    return this.isShowing;\r\n  }\r\n\r\n   showChange = new EventEmitter();\r\n\r\n  set show(val: boolean) {\r\n    this.isShowing = val;\r\n    this.showChange.emit(this.isShowing);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (!this.name) throw new Error(\"Spinner must have a 'name' attribute.\");\r\n\r\n    this.spinnerService._register(this);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.spinnerService._unregister(this);\r\n  }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\r\n  selector: 'spinner',\r\n  template: `\r\n    <div *ngIf=\"show\">\r\n      <img *ngIf=\"loadingImage\" [src]=\"loadingImage\" />\r\n      <ng-content></ng-content>\r\n    </div>\r\n  `\r\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: SpinnerService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'name': [{ type: Input },],\n'group': [{ type: Input },],\n'loadingImage': [{ type: Input },],\n'show': [{ type: Input },],\n'showChange': [{ type: Output },],\n};\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}